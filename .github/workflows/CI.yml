name: Project CI

on:
  push:
    branches: [develop, "release/**", main]
  pull_request:
    branches: [develop, "release/**", main]

jobs:
  static_code_scan:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube
        ports:
          - 9000:9000
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Wait for SonarQube to be fully ready
        run: |
          echo "Waiting for SonarQube to fully start..."
          until [[ "$(curl -s 'http://localhost:9000/api/system/status' | jq -r .status)" == "UP" ]]; do
            echo "SonarQube is not ready yet..."
            sleep 10
          done
          echo "SonarQube is ready."
      - name: Configure SonarQube Project and User
        run: |
          curl -u admin:admin -X POST "http://localhost:9000/api/projects/create" -d "name=gitgurus" -d "project=gitgurus"
          curl -u admin:admin -X POST "http://localhost:9000/api/users/create" -d "login=sonaruser" -d "password=sonarpass" -d "name=Sonar User"
          TOKEN=$(curl -u admin:admin -X POST "http://localhost:9000/api/user_tokens/generate" -d "login=sonaruser" -d "name=token-for-github-actions" | jq -r '.token')
          echo "SONAR_TOKEN=$TOKEN" >> $GITHUB_ENV
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          SONAR_HOST_URL: http://sonarqube:9000
      - name: Print and download analysis report
        run: |
          curl -s -u $SONAR_TOKEN: "http://localhost:9000/api/issues/search?componentKeys=gitgurus" | tee sonarqube-analysis-report.json | jq
      - name: Upload analysis report
        uses: actions/upload-artifact@v4
        with:
          name: sonarqube-analysis-report
          path: sonarqube-analysis-report.json
      - name: Install dependencies
        run: npm install
        working-directory: ./src/backendCLI
      - name: Run test coverage
        run: npm run test:coverage
        working-directory: ./src/backendCLI/src/test
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with: 
          name: coverage-report
          path: ./src/backendCLI/covarage
